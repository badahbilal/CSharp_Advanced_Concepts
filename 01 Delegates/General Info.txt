////Delegate 
        /*
        En fait, un type delegate est un concept très simple : 
        c’est un type qui permet de référencer une méthode d’une classe.
        Grâce aux delegates, vous pouvez transmettre une méthode comme paramètre
        (c’est un peu l’équivalent des pointeurs de fonction en C / C++ par exemple).

        Un type délégué(delegate en anglais) est toujours associé à la signature d’une méthode.
       Seules les méthodes ayant la même signature pourront être utilisées avec ce délégué.

        delegate est aussi un mot clé du langage C# (csharp) qui permet de déclarer un delegate.
        



        //Create  methode
        public static void sum(int a, int b)
        {
            Console.WriteLine("Sum is : " + (a + b));
        }

        //Create Delegate
        public delegate void mySumDelegate(int a, int b);
        static void Main(string[] args)
        {
            // instantiate the delegate and assign the method to it
            mySumDelegate mySumDelegate = new mySumDelegate(sum);

            // call the delegate
            mySumDelegate(1, 3);
            Console.WriteLine("Hello World!");
        }

        */

        //public static bool AugmentByExperience(Employee employee)
        //{
        //    return employee.Experience >= 3 ? true : false;  
        //}

        //public static bool AugmentByTask(Employee employee)
        //{
        //    return employee.Task >= 300 ? true : false;
        //}